import gradio as gr
from transformers import pipeline

# –ú–æ–¥–µ–ª—å –∞–Ω–∞–ª–∏–∑–∞ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ (–º–Ω–æ–≥–æ—è–∑—ã—á–Ω–∞—è)
classifier = pipeline("sentiment-analysis", model="cardiffnlp/twitter-xlm-roberta-base-sentiment")

# –¶–≤–µ—Ç–∞ –∏ —ç–º–æ–¥–∑–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
EMOTION_STYLES = {
    "positive": {"emoji": "üòä", "color": "#A7E9AF"},
    "neutral": {"emoji": "üòê", "color": "#F7E9A0"},
    "negative": {"emoji": "üòû", "color": "#F4A9A8"}
}

def analyze_emotion(text):
    result = classifier(text)[0]
    label = result["label"].lower()
    score = result["score"]

    style = EMOTION_STYLES.get(label, {"emoji": "‚ùì", "color": "#DDDDDD"})
    emotion_text = {
        "positive": "–ü–æ–∑–∏—Ç–∏–≤ / Positive / Í∏çÏ†ïÏ†Å",
        "neutral": "–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ / Neutral / Ï§ëÎ¶ΩÏ†Å",
        "negative": "–ù–µ–≥–∞—Ç–∏–≤ / Negative / Î∂ÄÏ†ïÏ†Å"
    }.get(label, label)

    html_output = f"""
    <div style="background-color:{style['color']}; 
                border-radius:20px; 
                padding:20px; 
                text-align:center;
                font-size:20px;
                box-shadow:0 2px 10px rgba(0,0,0,0.1);
                transition: all 0.3s ease;">
        <div style="font-size:50px;">{style['emoji']}</div>
        <div style="font-weight:bold;">{emotion_text}</div>
        <div style="margin-top:10px;">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {score*100:.1f}%</div>
    </div>
    """
    return html_output

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
demo = gr.Interface(
    fn=analyze_emotion,
    inputs=gr.Textbox(lines=2, label="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏–ª–∏ –∫–æ—Ä–µ–π—Å–∫–æ–º"),
    outputs=gr.HTML(label="–†–µ–∑—É–ª—å—Ç–∞—Ç"),
    title="üåç –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã–π AI-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —ç–º–æ—Ü–∏–π",
    description="–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–∫—Ä–∞—Å–∫—É —Ç–µ–∫—Å—Ç–∞ (–ø–æ–∑–∏—Ç–∏–≤, –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ, –Ω–µ–≥–∞—Ç–∏–≤) –Ω–∞ —Ä—É—Å—Å–∫–æ–º, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º –∏ –∫–æ—Ä–µ–π—Å–∫–æ–º —è–∑—ã–∫–∞—Ö.",
    theme="default"
)

demo.launch()

